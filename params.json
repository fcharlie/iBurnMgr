{"name":"iBurnManager a USB Boot Creat tools","tagline":"Metro USB Drives Burn Boot Manager","body":"USB Device Boot Burn Manager\r\n========\r\niBurnMgr is a 'Modern Style' USB Drives Burn Boot Manager.   \r\niBurnMgr is developed using C + +, runs on Windows, a production Windows 10 USB installation disk tools   \r\niBurnMgr used WTL framework, using Direct2D rendering Push Button, close and minimize buttons, and backgrounds, \r\nfunctional areas. Text is output using DirectWrite,MessageBox is TaskDialog replaced.    \r\nFormat the USB flash drive comes format.com tools rely on Windows, unzip the ISO image using 7z, \r\nrepair USB flash drive using the Windows ADK's bootsect.exe   \r\nIn the second edition or third edition, iBurnMgr will eliminate reliance on third-party tools.    \r\n\r\niBurnMgr now Support Multilanguage.\r\n\r\n###Internal\r\n1. Format:\r\n```c\r\nBOOL WINAPI  IVdsVolumeFormat(\r\n\tLPCWSTR    latter,\r\n\tLPWSTR    pwszLabel,\r\n\tFormatFailedCallback fcall,\r\n\tvoid *data)\r\n{\r\n\tif (!VAILED_LATTER(latter[0]) || latter[1] != ':') return FALSE;\r\n\tHRESULT hr, AsyncHr;\r\n\tIVdsAsync      *pAsync = NULL;\r\n\tVDS_ASYNC_OUTPUT AsyncOut;\r\n\r\n\thr = CoInitializeSecurity(\r\n\t\tNULL,\r\n\t\t-1,\r\n\t\tNULL,\r\n\t\tNULL,\r\n\t\tRPC_C_AUTHN_LEVEL_CONNECT,\r\n\t\tRPC_C_IMP_LEVEL_IMPERSONATE,\r\n\t\tNULL,\r\n\t\t0,\r\n\t\tNULL\r\n\t\t);\r\n\tIVdsServiceLoader *pLoader;\r\n\tIUnknown *pUnk;\r\n\tULONG ulFetched = 0;\r\n\thr = CoCreateInstance(CLSID_VdsLoader,\r\n\t\tNULL,\r\n\t\tCLSCTX_LOCAL_SERVER | CLSCTX_REMOTE_SERVER,\r\n\t\tIID_IVdsServiceLoader,\r\n\t\t(void **)&pLoader\r\n\t\t);\r\n\tif (hr != S_OK) return false;\r\n\tIVdsService *pService;\r\n\thr = pLoader->LoadService(NULL, &pService);\r\n\tpLoader->Release();\r\n\tpLoader = NULL;\r\n\tif (hr != S_OK){\r\n\t\tif (fcall){\r\n\t\t\tfcall(ErrorCodesMessage(hr), data);\r\n\t\t}\r\n\t\treturn FALSE;\r\n\t}\r\n\tVDS_DRIVE_LETTER_PROP mDriveLetterPropArray[1];\r\n\thr = pService->QueryDriveLetters(latter[0], 1, mDriveLetterPropArray);\r\n\tif (hr != S_OK){\r\n\t\tgoto _bailout;\r\n\t}\r\n\thr = pService->GetObjectW(mDriveLetterPropArray->volumeId, VDS_OT_VOLUME, &pUnk);\r\n\tif (hr != S_OK){\r\n\t\tgoto _bailout;\r\n\t}\r\n\tIVdsVolume *pVolume;\r\n\thr = pUnk->QueryInterface(IID_IVdsVolume, (void **)&pVolume);\r\n\tif (hr != S_OK){\r\n\t\tSAFE_RELEASE(pUnk);\r\n\t\tgoto _bailout;\r\n\t}\r\n\tIVdsVolumeMF3 *pVolumeMF3;\r\n\thr = pVolume->QueryInterface(IID_IVdsVolumeMF3, (void **)&pVolumeMF3);\r\n\r\n\thr = pVolumeMF3->FormatEx2(L\"NTFS\", 1, 0, pwszLabel, VDS_FSOF_QUICK, &pAsync);\r\n\thr = pAsync->Wait(&AsyncHr, &AsyncOut);\r\n\tif (FAILED(hr)){\r\n\t\tif (fcall){\r\n\t\t\tfcall(ErrorCodesMessage(hr), data);\r\n\t\t}\r\n\t}\r\n\telse if (FAILED(AsyncHr)){\r\n\t\tif (fcall){\r\n\t\t\tfcall(ErrorCodesMessage(hr), data);\r\n\t\t}\r\n\t}\r\n\telse{\r\n\t\tif (fcall){\r\n\t\t\tfcall(L\"Format volume Success done. \", data);\r\n\t\t}\r\n\t}\r\n\tSAFE_RELEASE(pVolume);\r\n\tSAFE_RELEASE(pVolumeMF3);\r\n_bailout:\r\n\tSAFE_RELEASE(pService);\r\n\tCoUninitialize();\r\n\treturn hr==S_OK;\r\n}\r\n```\r\n\r\n2. Uncompress ISO:\r\n>7z x file.iso -aoa -y -o X:\\\r\n\r\n3. Boot:\r\n>bootsect /NT60 X:\r\n\r\n\r\n\r\n###Build\r\nrun WDExpress [VisualStudio 2012(2013) for Desktop] \r\nor Type:\r\n> msbuild iBurnMgr.sln /t:Rebuild /p:Configuration=Release\r\n\r\n###Run\r\nlast double click iBurnMgr.exe ,or Right-to run with administrator privileges.\r\n\r\nGood Luck!\r\n\r\n\r\n\r\n####Screenshot\r\nFormat Disk Warning:       \r\n![WARNING](./ImageShow/Image.JPG)\r\n\r\nCreate BootUSB Success:      \r\n![SUCCRSS](./ImageShow/101.JPG)\r\n\r\nCreate Faild:      \r\n![FAILD](./ImageShow/Image2.JPG)\r\n\r\nNewUI:     \r\n![NewUI](./ImageShow/NewUI.PNG)\r\n\r\n\r\nChinese UI:       \r\n![ChineseUI](./ImageShow/zh-CN.PNG)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}